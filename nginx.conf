#user                nobody;
worker_processes     auto;
worker_rlimit_core   10000m;
worker_rlimit_nofile 65535;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
error_log /dev/null crit;

#pid    logs/nginx.pid;


events {
    worker_connections  65535;
    use                 epoll;
}


http {
    include         mime.types;
    default_type    application/octet-stream;
    add_header      X-Frame-Options SAMEORIGIN;

    charset utf-8;

    server_names_hash_bucket_size   128;
    client_max_body_size            300m;
    client_header_buffer_size       128k;
    large_client_header_buffers 4 32k;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log     logs/access.log  main;

    sendfile       on;
    tcp_nopush     on;
    tcp_nodelay    on;
    keepalive_timeout       60;
    client_header_timeout   10;
    client_body_timeout     10;
    send_timeout            60;

    proxy_connect_timeout   900;
    proxy_read_timeout      900;
    proxy_send_timeout      900;
    proxy_buffer_size       64k;
    proxy_buffers 4 64k;
    proxy_busy_buffers_size 128k;
    proxy_temp_file_write_size 128k;
    proxy_max_temp_file_size 0;
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 600;
    fastcgi_read_timeout 600;
    fastcgi_buffer_size 128k;
    fastcgi_buffers 8 128k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 256k;
    fastcgi_intercept_errors on;
    fastcgi_max_temp_file_size 0;

    gzip  on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    #gzip_types text/plain application/x-javascript text/css application/xml;
    gzip_vary on;

    #keepalive_timeout  0;
    #keepalive_timeout  65;

    #gzip  on;

    add_header 'Access-Control-Allow-Origin' '*';
    #add_header Access-Control-Allow-Origin $corsHostList;
    add_header 'Access-Control-Allow-Methods' 'GET,POST,PUT,OPTIONS';
    #add_header 'Access-Control-Allow-Headers' 'X-Requested-With,Origin,Content-Type,Accept,Authorization,Access-Control-Allow-Credentials';
    add_header 'Access-Control-Allow-Headers' '*';
    #add_header 'Access-Control-Allow-Credentials' 'true';
    #add_header content-Security-Policy: default-src;
    #add_header Cross-Origin-Opener-Policy same-origin;
    #add_header Cross-Origin-Embedder-Policy require-corp;
    #add_header Cross-Origin-Resource-Policy cross-origin;
    add_header X-Frame-Options SAMEORIGIN;

    include vhosts/*.conf;
    proxy_set_header  X-Real-IP  $remote_addr;

    server {
        listen      80;
        server_name localhost;
        set         $yii_bootstrap "index.php";
        set         $host_path "/mnt/cdrom/ppcbin/htdocs";
        root        $host_path;
        #charset    koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}

        location / {
            index   html index.php;
            try_files $uri $uri/ /index.php?$args;
            #index  index.html index.htm;
        }

        location /istudio {
           #if ($request_uri ~* '/istudio/qb/qblist/qblist.do'){
           #   rewrite ^(.*) /istudio/qb/qblist/getcontent.html redirect;
           #}

           if (!-f $request_filename){
              rewrite ^/istudio/(.*\.html$) /istudio/index.php/$1 last;
           }
        }

        location /proxy {
           if (!-f $request_filename){
              rewrite ^/proxy/(.*\.html$) /proxy/index.php/$1 last;
           }
        }

        location ~ \.php($|/) {
            root $host_path;
            fastcgi_connect_timeout 180;
            fastcgi_read_timeout 600;
            fastcgi_send_timeout 600;
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;

            set $script $uri;
            set $path_info "";

            if ($uri ~ "^(.+\.php)(/.*)") {
                set  $script     $1;
                set  $path_info  $2;
            }

            fastcgi_param SCRIPT_FILENAME $document_root$script;
            fastcgi_param SCRIPT_NAME $script;
            fastcgi_param PATH_INFO $path_info;

            include fastcgi_params;
        }
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80

        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
    }


    # another virtual host using mix of IP-, name-, and port-based configuration

    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    # HTTPS server

    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
